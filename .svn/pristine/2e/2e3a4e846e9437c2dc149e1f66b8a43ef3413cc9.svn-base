//app.js
//解密工具类
var WXBizDataCrypt = require('utils/WXBizDataCrypt.js');
var sync = require("./utils/sync.js");
var AppId = 'wx115118f71009b134';
var Secret = '4b5f3a3bf0c1e32e0fa39faf613aa1aa';
//活动开始后循环时间 
var cycleTime = 2000;
//活动开始前循环的时间 5分钟 5*36000
var beforeWalkCycleTime = 2000;
//判断用户合法循环时间
var checkLoginUserCycleTime=1000
App({
  //全局数据
  globalData: {
    userInfo: null, //用户信息
    userSteps: 0,  //当前步数
    initSteps: 0 ,//初始化步数
    location: null ,//位置信息
    isLogin:false, //登录状态
    openId:null, //openId
     userInforUrl:'https://57924750.qcloud.la/walking-service',//腾讯云地址
    // userInforUrl: 'http://192.168.20.250:8080',//本机
    beginTime:null,
    endTime:null
  },
  /**
   * 更新全局步数和缓存步数
   */
  updateGlobalAndCacheSteps: function (currentStep) {
    //更新数据
    getApp().globalData.userSteps = currentStep;
    //缓存当前步数
    wx.setStorage({
      key: 'currentStep',
      data: currentStep
    });
  },
  /**
   * 更新全局和缓存位置信息
   */
  updateGlobalAndCacheLocation: function (location) {
    //更新数据
    getApp().globalData.location = location;
    //缓存当前步数
    wx.setStorage({
      key: 'location',
      data: location
    });
  },
  updateCache: function (location) {
    //更新数据
    getApp().globalData.location = location;
    //缓存当前步数
    wx.setStorage({
      key: 'location',
      data: location
    });
  },
  /**
   * 获取用户步数 new 
   */
  gainUserSteps: function (callback){
    wx.login({
      success: res => {
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
        wx.request({
          url: 'https://api.weixin.qq.com/sns/jscode2session',
          data: {
            appid: AppId,
            secret: Secret,
            js_code: res.code,
            grant_type: 'authorization_code'
          },
          header: {
            "Content-Type": "application/x-www-form-urlencoded"
          },
          method: 'GET',
          success: function (res) {
            var pc = new WXBizDataCrypt(AppId, res.data.session_key);
            wx.getWeRunData({
              success(res) {
                console.log('解密开始')
                var data = pc.decryptData(res.encryptedData, res.iv);
                var stepInfoList = data.stepInfoList;
                callback && callback(stepInfoList);
                console.log('解密后 data: ', data);
              }

            })
          }
        })
      }
    })
  },
  /**
   * 获取位置信息 
   */
  gainUserLocation:function(callback){
    wx.getLocation({
      success: function (res) {
        callback(res);
      },
    })
  },
  /**
   * 获取初始化步数
   * 缓存获取
   *  1、存在：返回，回调函数
   *  2.不存在：请求数据库获取，然后设置缓存，回调函数
   * 
   */
  gainUserInitSteps:function(callback){
    console.log("------------获取初始化步数--------");
    var _this = this;
    var value = wx.getStorageSync('initSteps')
    if (value) {
      // Do something with return value
      callback && callback(value)
    }else{
      wx.request({
        url: _this.globalData.userInforUrl + "/sync/initData/" + _this.globalData.openId,
        success: function (res) {
          var result = res.data;
          console.log("缓存初始化数据");
          wx.setStorage('initSteps', result.initialUserSteps);
          callback && callback(result.initialUserSteps)
        }
      })
    }
    // wx.getStorage({
    //   key: 'initSteps',
    //   success: function(res) {
    //     if(res.data){
    //       //存在
    //       var result = res.data;
    //       callback && callback(result.initialUserSteps)
    //     }
    //   },
    //   fail:function(){
    //     console.log('----- 没有初始化步数缓存--------');
    //     //不存在,判断数据库中是否存在
    //     wx.request({
    //       url: _this.globalData.userInforUrl + "/sync/initData/" + _this.globalData.openId,
    //       success: function (res) {
    //         var result = res.data;
    //         console.log("缓存初始化数据");
    //         wx.setStorage('initSteps', result.initialUserSteps);
    //         callback && callback(result.initialUserSteps)
    //       }

    //     })
    //   }
    // })
  },

  /**
   * 同步位置数据
   */
  syncLocation: function () {
    this.gainUserLocation(function(res){
      var newLongitude = res.longitude;
      var newLatitude = res.latitude;
      wx.getStorage({
        key: 'location',
        success: function (cacheLocation) {
          console.log(cacheLocation, "缓存中的位置数据");
          var location = cacheLocation.data;
          var longitude = location.longitude;
          var latitude = location.latitude;
          if (newLongitude !== longitude || newLatitude !== latitude) {
            console.log("--同步后台数据位置信息--");
            sync.syncLocation(res);
          }
          //更新全局和混存位置
          getApp().updateGlobalAndCacheLocation(res);

        },
        fail: function () {
          // 更新全局和混存位置
          getApp().updateGlobalAndCacheLocation(res);
          console.log("--第一次同步后台数据位置信息--");
          sync.syncLocation(res);
        }
      })
    })
  },

  /**
   * 活动开始前同步:同步初始化步数，并处理存储初始化步数
   */
  syncBeforeWalk: function (callback) {
    console.log("------初始化步数同步------")
    var _this = this;
    this.gainUserSteps(function (stepInfoList){
      console.log("获取步数回调：",stepInfoList);
      if (stepInfoList.length == 0) {
        return;
      }
      var index = stepInfoList.length - 1;
      //当前步数
      var currentStep = stepInfoList[index].step;
      _this.gainUserInitSteps(function (latestSteps){
        var now =  new Date().getTime;
        var beginTime = _this.globalData.beginTime;
        if(now <= beginTime){
            //未开始，设置当前的步数
          _this.globalData.initSteps = currentStep;
          if (currentStep !== latestSteps) {
            //初始化同步
            sync.syncInit(currentStep);
          }

        }else{
          //已经开始
          if(null == latestSteps){
            sync.syncInit(currentStep);
            _this.globalData.initSteps = currentStep;
          }else{
            _this.globalData.initSteps = latestSteps;
          }
          
        }
       
        
      })
      

      // //上次步数
      // var latestSteps = getApp().globalData.initSteps;
      // if(currentStep !== latestSteps){
      //   //初始化同步
      //   sync.syncInit(currentStep);
      //   getApp().globalData.initSteps = currentStep;
      // }
    });
  },
  //循环开始前同步
  syncBeforeWalkCycle: function (beforeTime){
    console.log("--------活动前同步----------");
    this.syncBeforeWalk();
    var syncBeforeWalkInter = setInterval(function () {
      beforeTime = beforeTime - beforeWalkCycleTime;
      if (beforeTime < 0) {
        clearInterval(syncBeforeWalkInter);
        //活动时间。。
        var beginTime = getApp().globalData.beginTime;
        var endTime = getApp().globalData.endTime;
        //开始活动同步。。。
        getApp().syncWalkingCycle(endTime-beginTime);
        console.log("---开始前同步结束----");
      }  
      //同步步数
      getApp().syncBeforeWalk();
      //同步位置
      getApp().syncLocation();
    }, beforeWalkCycleTime);
  },
  /**
   * 活动开始同步
   */
  syncWalking:function(){
    this.gainUserSteps(function (stepInfoList) {
      if (stepInfoList.length == 0) {
        return;
      }
      var index = stepInfoList.length - 1;
      //当前步数
      var currentStep = stepInfoList[index].step;
      //上次步数
      var latestSteps = getApp().globalData.userSteps;
      if (currentStep !== latestSteps) {
        //初始化同步
        sync.syncUserSteps(currentStep);
        getApp().globalData.userSteps = currentStep;
      }
    });
  },

  syncWalkingCycle:function(walkingTime){
    console.log("---活动开始同步：剩余：", walkingTime);
    this.syncWalking();
    this.syncLocation();
    var syncWalkingCycleInter = setInterval(function(){
      walkingTime = walkingTime - cycleTime;
      if (walkingTime <0){
        clearInterval(syncWalkingCycleInter);
        console.log("------结束活动循环同步-------");
      }
      getApp().syncWalking();
      getApp().syncLocation();
    },cycleTime);
  },

  /**
   * 获取用户信息
   * 1.先登录
   * 2.获取用户信息
   * 3.获取openId
   * 4.回调函数
   */

  acquireUserInfo:function(callback){
    wx.login({
      success: function (res) {
        if (res.code) {
          var code = res.code;
          //获取用户的信息
          wx.getUserInfo({
            withCredentials: true,
            lang: 'zh_CN ',
            success: function (res) {
              console.log("------获取UserInfo成功-------")
              //设置全局信息
              getApp().globalData.userInfo = res.userInfo;
              // 发送 res.code 到后台换取 openId, sessionKey, unionId
              wx.request({
                url: 'https://api.weixin.qq.com/sns/jscode2session',
                data: {
                  appid: AppId,
                  secret: Secret,
                  js_code: code,
                  grant_type: 'authorization_code'
                },
                header: {
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                method: 'GET',
                success: function (res1) {
                  callback(res1)
                },
                fail(){
                  console.log('----获取用户openID失败----------');
                }
              })
            },
            fail: function (res) { },
            complete: function (res) { },
          })
        } else {
          console.log('获取用户登录态失败！' + res.errMsg)
        }
      }
    });
  },
  /**
   * 判断用户登录
   */
  checkLoginUser:function(callback){
    console.log("------判断用户合法性-------");
    var _this = this;
    var checkLoginUserInter = setInterval(function () {
      console.log(_this.globalData);
      var loginFlag = _this.globalData.isLogin
      if (loginFlag) {
        callback && callback();
        clearInterval(checkLoginUserInter)
      }else{
        console.log("------用户不合法-------");
      }
    }, checkLoginUserCycleTime);

  },
  /**
   * 1.授权并获取用户信息及openid
   * 2.判断用户合法性
   * 2.判断活动合法性
   */
  onLaunch: function () {
    var _this = this;
    console.log("-----------app onLaunch-----------");
    console.log('------开始获取用用户的openId----------');
    //获取用户信息，并写入APPID，此时如果不写的在登录时候强制写入
    wx.getUserInfo({
      success: function (res) {
        _this.acquireUserInfo(function (res) {
          _this.globalData.openId = res.data.openid;
          //回调用户登录后的回调
          _this.userInfoReadyCallback()
        });
      },
      fail: function (res) {
        //强制获取用户信息
        _this.gainOpenId(_this.userInfoReadyCallback)
      }
     });
    //判断用户合法性
    this.checkLoginUser(function(){
        console.log('--------用户已经合法---------');
        sync.syncWalkTime(function(res){
          var currentTime = res.currentTime;
          var beginTime = res.beginTime;
          var endTime = res.endTime;
          //设置全局的活动时间
          _this.globalData.beginTime = beginTime;
          _this.globalData.endTime = endTime;
          //距离活动开始时间
          var beforeWalkTime = beginTime - currentTime;
          //活动持续时间
          var walkDuraionTime = endTime -beginTime;
          //活动剩余时间
          var walkRemainTime = endTime - currentTime;
          
          //活动结束判断
          if (walkRemainTime <=0){
            console.log('---------活动已经结束------------');
            return ;
          }else{
            if (beforeWalkTime <= 0) {
              //已经开始
              if (walkRemainTime > 0) {
                console.log(getApp().globalData," 开始后后的")
                //初始化同步一次
                _this.syncBeforeWalk();
                //同步活动
                _this.syncWalkingCycle(walkRemainTime);
              }
            } else {
              //未开始
              console.log("--未开始 每5分钟初始化同步一次--");
              _this.syncBeforeWalkCycle(beforeWalkTime);
            }

          }
        });
    });

  },
  /**
   * 获取用户的openId,包括强制授权
   */
  gainOpenId: function (userInfoReadyCallback){
    var _this = this;
    var openId = this.globalData.openId;
    if (!openId) {
      wx.getSetting({
        success: function success(res) {
          if (!res.authSetting['scope.userInfo']) {
            wx.showModal({
              title: '用户未授权',
              content: '美女or帅哥请授权您的用户信息，让我们知道您来了~~',
              showCancel: false,
              success: function (res) {
                if (res.confirm) {
                  wx.openSetting({
                    success: function success(res) {
                      _this.acquireUserInfo(function (res) {
                        _this.globalData.openId = res.data.openid;
                        userInfoReadyCallback()
                      });
                    }
                  });
                }
              }
            })
          }
        }
      });
    }
  },
 
 

})
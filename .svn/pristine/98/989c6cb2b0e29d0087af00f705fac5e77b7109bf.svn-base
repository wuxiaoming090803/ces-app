const formatTime = date => {
  const year = date.getFullYear()
  const month = date.getMonth() + 1
  const day = date.getDate()
  const hour = date.getHours()
  const minute = date.getMinutes()
  const second = date.getSeconds()

  return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')
}
const toDate = number =>{
  var n = number * 1000;
  var date = new Date(n);
  var Y = date.getFullYear() + '/';
  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '/';
  var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
  return (Y + M + D)
}  

const formatNumber = n => {
  n = n.toString()
  return n[1] ? n : '0' + n
}
const getTwoLength = data =>{
  data = Math.floor(data);
  if (data < 10) {
    return "0" + data;
  } else {
    return "" + data;
  }
}
const formatDuring = mss =>{
  var hour = 0;
  var minute = 0;
  var second = 0;

  second = mss / 1000;

  if (second > 60) {
    minute = second / 60;
    second = second % 60;
  }
  if (minute > 60) {
    hour = minute / 60;
    minute = minute % 60;
  }
  return (getTwoLength(hour) + ":" + getTwoLength(minute) + ":" + getTwoLength(second));
}
const timeRange = (beginTime,endTime)=>{
  var beginSeconds = new Date(beginTime).getTime();
  var endSeconds = new Date(endTime).getTime();
  return endSeconds - beginSeconds;

}

module.exports = {
  formatTime: formatTime,
  toDate:toDate,
  timeRange:timeRange,
  formatDuring:formatDuring
}
